apiVersion: v1
kind: Service
metadata:
  name: kafka-cluster
  labels:
    app: kafka
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - protocol: TCP
      name: plaintext
      port: 9092
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-cluster
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kafka
        imagePullPolicy: Always
        image: "wurstmeister/kafka:2.13-2.6.0"
        resources:
          requests:
            memory: "300Mi"
            cpu: "50m"
          limits:
            memory: "400Mi"
            cpu: "0.25"
        env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zk-cs
            - name: KAFKA_ADVERTISED_HOST_NAME
              valueFrom:
                    fieldRef:
                        fieldPath: status.podIP
            - name: KAFKA_HEAP_OPTS
              value: -Xmx256M -Xms128M
            - name: KAFKA_MESSAGE_MAX_BYTES
              value: "33554432"
        ports:
        - containerPort: 9092
          name: plaintext                        
        volumeMounts:
        - name: datadir
          mountPath: /kafka      
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
spec:
  selector:
    app: kafka-ui
  ports:
  - port: 80
    targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
spec:
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - name: kafdrop
        image: obsidiandynamics/kafdrop      
        env:
         - name: KAFKA_BROKERCONNECT
           value: kafka-cluster:9092
         - name: SERVER_SERVLET_CONTEXTPATH
           value: /
         - name: JVM_OPTS
           value: -Xms64M -Xmx128M
        resources:
          requests:
            memory: "300Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 9000

