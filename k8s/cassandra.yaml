apiVersion: v1
kind: Service
metadata:
  name: cass-hs
  labels:
    app: cass
spec:
  ports:
  - port: 7000
    name: gossip
  - port: 9042
    name: csql  
  clusterIP: None
  selector:
    app: cass
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: cass-pdb
spec:
  selector:
    matchLabels:
      app: cass
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cass
spec:
  selector:
    matchLabels:
      app: cass
  serviceName: cass-hs
  replicas: 4
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: cass
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - cass
              topologyKey: "topology.kubernetes.io/zone"
      terminationGracePeriodSeconds: 1800
      containers:
      - name: cassandra
        imagePullPolicy: Always
        image: "dgrechka/k8s-cassandra:latest"
        env:
          - name: CASSANDRA_BROADCAST_ADDRESS
            valueFrom:
                  fieldRef:
                      fieldPath: status.podIP
          - name: CASSANDRA_SEEDS
            value: cass-0.cass-hs.default.svc.cluster.local
            #value: cass-hs.default.svc.cluster.local
          - name: CASSANDRA_NUM_TOKENS
            value: "32"
          - name: CASSANDRA_DC
            valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['topology.kubernetes.io/zone']
            # value: dc1
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - nodetool drain
        resources:
          limits:
            #cpu: "300m"
            memory: 1.2Gi
          requests:
            cpu: "200m"
            memory: 1.2Gi
        ports:
        - containerPort: 7000
          name: gossip
        - containerPort: 9042
          name: client        
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/cassandra
          # NOTE FOR FUTURE:
          # if you mount /etc/cassandra/cassandra.yaml the image will try to change its owner and fail, as the file is readonly
          # so if you want to reconfigure cassandra, rebuild the image      
              
      tolerations:
      - key: "role"
        operator: "Equal"
        value: "master"
        effect: "PreferNoSchedule"            
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 60Gi
